// SPDX-License-Identifier: MIT
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/DkimVerifier.sol";
import "../src/DkimKeys.sol";

contract DkimVerifierTest is Test {
    DkimVerifier public verifier;
    DkimKeys public keys;

    function setUp() public {
        keys = new DkimKeys();
        verifier = new DkimVerifier(address(keys));

        keys.updateKey(
            hex"742f414edb3e03a4afce78a329bb4c56d45c6f449a5d9248c879b987cbd2c088",
            hex"b3a543e094101d1676119351e744da9084056371863f855f63704f6ee7907ba5e7c2f86e879c24565954f174c8c7166df93eae83bb5be906c00aea50f48fd303674a9225afe165d4b7ea917e4719bf379d1201896a540bbcf4768996889aa5a230d5ce8a7b627e6d20f3caec7d1ad85166b74fe608a396e2220f409ea9a8f706ca0e6b4c95632092852a2876e30d58076fa8aa6230d5fc7124a7986d04269c3f92af75c1f5f26e8fdaa52771fc5f3e3e4392bc323c0937c78329eac9b8c2a001632c91ba4c4edbf9482948d981b1c012e7511bd959aa58b290c380e5900a4330f41255908983c02b6b3de7e1b4147778256b43e6952aab3b98fa13a79bfd1d0f"
        );

        keys.updateKey(
            hex"f4aa4be7e92c27323564f0fbbc6600818201d2d09a63e00fa7983b8e7415a3d5",
            hex"cfb0520e4ad78c4adb0deb5e605162b6469349fc1fde9269b88d596ed9f3735c00c592317c982320874b987bcc38e8556ac544bdee169b66ae8fe639828ff5afb4f199017e3d8e675a077f21cd9e5c526c1866476e7ba74cd7bb16a1c3d93bc7bb1d576aedb4307c6b948d5b8c29f79307788d7a8ebf84585bf53994827c23a5"
        );
    }

    function testExtractInfo() public {
        bytes memory data =
            hex"0000002f0000000f000000710000000566726f6d3a223d3f676231383033303f423f30653752703861393f3d22203c717571757a6f6e654071712e636f6d3e0d0a746f3a223d3f676231383033303f423f624756763f3d22203c6c656f40696f7465782e696f3e0d0a7375626a6563743a68656c6c6f0d0a646174653a4672692c2035204d617920323032332032303a34333a3138202b303830300d0a646b696d2d7369676e61747572653a763d313b20613d7273612d7368613235363b20633d72656c617865642f72656c617865643b20643d71712e636f6d3b20733d733230313531323b20743d313638333239303539393b2062683d346b322f5952756177664f704943504f4f6f4672796458433865684851675a30515331333176372b6a4c593d3b20683d46726f6d3a546f3a5375626a6563743a446174653b20623d";
        bytes memory from = verifier.from(data);
        assertEq(from, abi.encodePacked("ququzone@qq.com"));

        bytes memory subject = verifier.subject(data);
        assertEq(subject, abi.encodePacked("hello"));

        bytes32 hash = verifier.hash(data);
        assertEq(hash, hex"86ca54d1fc1493f3d9e8865db9734886697d229b8544eaedeca53f37995b7fee");
    }

    function testVerify() public {
        bytes32 server = keccak256(abi.encodePacked("s201512.qq.com"));
        bytes memory data =
            hex"0000002f0000000f000000710000000566726f6d3a223d3f676231383033303f423f30653752703861393f3d22203c717571757a6f6e654071712e636f6d3e0d0a746f3a223d3f676231383033303f423f624756763f3d22203c6c656f40696f7465782e696f3e0d0a7375626a6563743a68656c6c6f0d0a646174653a4672692c2035204d617920323032332032303a34333a3138202b303830300d0a646b696d2d7369676e61747572653a763d313b20613d7273612d7368613235363b20633d72656c617865642f72656c617865643b20643d71712e636f6d3b20733d733230313531323b20743d313638333239303539393b2062683d346b322f5952756177664f704943504f4f6f4672796458433865684851675a30515331333176372b6a4c593d3b20683d46726f6d3a546f3a5375626a6563743a446174653b20623d";
        bytes memory signature =
            hex"22f92bb51af2b69713b12986b65d6f2d5a19819e3935774b6b8b919d984424745055b481f3dfd3f00e03e948282d3be8ae622f1ad03109c28717661a2a8726648c8833891974cdbb3c9769b47d005184043bc00c58a17a2f9a0bf060eff172a3ceb2b0c91e3578f30db904c17da3cdc05fe55b7334118141e546a6bf3db193fe";

        assertEq(verifier.verify(server, data, signature), true);
        assertEq(verifier.verify(keccak256(abi.encodePacked("20221208.gmail.com")), data, signature), false);
    }
}
